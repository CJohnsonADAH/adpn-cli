#!/bin/bash
#
# adpn-do-publisher: script to handle adpn publisher commands
#
# @version 2021.0302

SCRIPTPATH="$(which "$0")"
SCRIPTPATH="$( readlink --canonicalize "${SCRIPTPATH}" )"
SCRIPTDIR="$(dirname "${SCRIPTPATH}")"
SCRIPT="$(basename "${SCRIPTPATH}")"

source "${SCRIPTDIR}/adpn-define-aliases"

__USAGE__="Usage: ${SCRIPT} [--version] [--help] <CMD> [<ARGS>]"
__HELP__="[${SCRIPT}] Try '${SCRIPT} help' for more information."
__DOC__="""${__USAGE__}

  --version 	Display the version of the script
  --help    	Display these usage notes

The most commonly used ${SCRIPT} commands are:
  destination  	Output a destination directory for the rebalanced AU
  
Exit codes:
0 = success (successful operation and expected result)
1-254 = error in executing command
255 = command not supported
"""

##########################################################################################
### COMMAND LINE: loop through switches ##################################################
##########################################################################################

declare -a _ARGV ; _ARGV=("$0")
declare -a _CMDLINE ; _CMDLINE=("$0")
declare -A _PARAM=()

shopt -s lastpipe

declare -a SWITCHFILES ; SWITCHFILES=()
if [[ -r "${CONFFILE}" ]] ; then
	SWITCHFILES+=(${CONFFILE})
fi

CMDLINETXT=$(mktemp)

until [[ "$#" -lt 1 ]] ; do
	_CMDLINE+=("$1")
	printf "%s\n" "$1" >> "${CMDLINETXT}"
	shift
done

SWITCHFILES+=(${CMDLINETXT})

adpn_command_line "${SWITCHFILES[@]}"

rm "${CMDLINETXT}"

##########################################################################################
### SCRIPT: DETERMINE COMMAND, THEN EXECUTE PIPELINE  ####################################
##########################################################################################

EXITCODE=0

V="${_LINESWITCH[verbose]}"
Q=""
if [[ -z "${_PARAM[verbose]}" ]] ; then
	Q="--quiet"
fi

CMD="${_ARGV[1]}"

SCRIPT_CMD_NAME="${_PARAM[context]}"
if [[ -z "${SCRIPT_CMD_NAME}" ]] ; then
	SCRIPT_CMD_NAME="${SCRIPT}"
fi
if [[ -n "${CMD}" ]] ; then
	SCRIPT_CMD_NAME="${SCRIPT_CMD_NAME} ${CMD}"
fi

if [[ ! -z "${_PARAM[version]}" ]] ; then
	VERSION=$(grep "^# @version" $0 | head --lines=1 | cut --only-delimited --fields=3- --delimiter=" ")
	echo "${SCRIPT_CMD_NAME} version ${VERSION}"
	CMD="version"
fi

if [[ ! -z "${_PARAM[help]}" ]] ; then
	echo "${__DOC__}"
	CMD="help"
fi

case "${CMD}" in
		
	""|"list")
# @method adpn publisher list
# Display a list of available publishers with their au_pub_id codes.
# 
# Usage: adpn publisher list
#
# @version 2021.0302

		if [[ -z "${CMD}" ]] ; then
			CMD="list"
		fi
		
		MYSQL_HOST="$( adpn_setting "mysql-host" "mysql/host" )"
		MYSQL_DB="$( adpn_setting "mysql-db" "mysql/db" )"
		MYSQL_USER="$( adpn_setting "mysql-user" "mysql/user" )"
		MYSQL_PASSWORD="$( adpn_setting "mysql-password" "mysql/password" )"
		mysql --user="${MYSQL_USER}" --password="${MYSQL_PASSWORD}" --database="${MYSQL_DB}" --host="${MYSQL_HOST}" --execute "SELECT * FROM au_publishers"
		EXITCODE="$?"
		;;
	
	"add")
# @method adpn publisher add
# Add a new publisher to the list of AU publishers on the props server.
# 
# Usage: 	adpn publisher add <AU_PUB_ID> [<OPTIONS>]...
#
# AU_PUB_ID is a unique alphanumeric code for the publisher (e.g.: AUB, ADAH)
#
# 
# @version 2021.0224

		echo "[${SCRIPT_CMD_NAME}] '${CMD}' command not yet implemented." 1>&2
		EXITCODE=255
		;;
		
	"version"|"help")
		EXITCODE=0
		;;
		
	*)
		echo "[${SCRIPT_CMD_NAME}] '${CMD}' command not understood." 1>&2
		echo "${__HELP__}" 1>&2
		EXITCODE=255
		;;
esac

##########################################################################################
### CLEANUP: remove temporary output file. ###############################################
##########################################################################################

exit ${EXITCODE}
