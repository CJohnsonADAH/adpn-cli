#!/bin/bash
#
# adpn-define-aliases: some basic subroutines used across many of the adpn suite of scripts
#
# @version 2019.0807

PATH=${SCRIPTDIR}:${PATH}
CONFFILE="${SCRIPTDIR}/${SCRIPT}.defaults.conf"
JSONCONFFILE="${SCRIPTDIR}/adpnet.json"

# adpnparam: retrieve and echo a parameter from the adpnet.json config file
# example: FOOBAR=$( adpnparam "${KEY}" )
#
# @param string key name to retrieve from JSON config file
# @return int exit code from adpn-json.py (0=success, 1=key not found)
#
# @version 2019.0807
adpnparam() {
	local key="${1}"
	if [[ -z "${key}" ]] ; then
		REPLY=$(cat "${JSONCONFFILE}" | adpn-json.py)
		JSONEXIT=$?
	else
		REPLY=$(cat "${JSONCONFFILE}" | adpn-json.py --key="${key}")
		JSONEXIT=$?
	fi
	printf "%s" "${REPLY}" 
	return "${JSONEXIT}"
}

# rawurlencode: Encode a command-line parameter to URL (%hex) style encoding and output
# example: FOOBAR=$( rawurlencode "${DATA}" )
# uses code from @Orwellophile at https://stackoverflow.com/questions/296536/how-to-urlencode-data-for-curl-command
# @version 2019.0807
rawurlencode() {
  local string="${1}"
  local strlen=${#string}
  local encoded=""
  local pos c o

  for (( pos=0 ; pos<strlen ; pos++ )); do
     c=${string:$pos:1}
     case "$c" in
        [-_.~a-zA-Z0-9] ) o="${c}" ;;
        * )               printf -v o '%%%02x' "'$c"
     esac
     encoded+="${o}"
  done
  echo "${encoded}"    # You can either set a return variable (FASTER) 
  REPLY="${encoded}"   #+or echo the result (EASIER)... or both... :p
}
