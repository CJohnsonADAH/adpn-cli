#!/bin/bash
#
# adpn-do-preserve-email: As part of the ingest process, accept some pipelined JSON data
# from stdin, and then drop it into an e-mail to the network admin.
#
# Usage: <INPUT> | adpn-do-preserve-email --subject="<SUBJECT_LINE>" [--to="<EMAIL>"]
#
# - Attempts to find an OUTLOOK.EXE, and if found, uses command-line parameters to spawn
#   a new e-mail with the specified e-mail address, subject line and body.
#
# @version 2019.0807

SCRIPTPATH=$(which $0)
SCRIPTDIR=$(dirname "${SCRIPTPATH}")
SCRIPTNAME=$(basename "${SCRIPTPATH}")

source "${SCRIPTDIR}/adpn-define-aliases"

##########################################################################################
### COMMAND LINE: loop through switches and sort them to subsidiary scripts ##############
##########################################################################################

shopt -s lastpipe

declare -a SWITCHFILES ; SWITCHFILES=()
declare -a _ARGV ; _ARGV=()
declare -A _PARAM ; _PARAM=()

CMDLINETXT=$(mktemp)

until [[ -z "$1" ]] ; do
	printf "%s\n" "$1" >> "${CMDLINETXT}"
	shift
done

SWITCHFILES+=(${CMDLINETXT})

cat "${SWITCHFILES[@]}" | while IFS="" read -r SWITCH ; do

	if [[ "${SWITCH}" =~ ^--([A-Za-z_0-9][^=]*)(=\s*(.*)\s*)?$ ]] ; then
		KEY="${BASH_REMATCH[1]}"
		VALUE="${BASH_REMATCH[3]}"
		if [[ -z "${BASH_REMATCH[2]}" ]] ; then
			VALUE="${KEY}"
		fi

		_PARAM[$KEY]="${VALUE}"
		
	elif [[ ! -z "${SWITCH}" ]] ; then
		_ARGV+=("${SWITCH}")
	fi
	
done

rm "${CMDLINETXT}"

##########################################################################################
### SCRIPT: Get admin e-mail address, subject, and body from config, cmd line or stdin ### ##########################################################################################

if [ ! -z "${_PARAM[to]}" ] ; then
	ADMIN_EMAIL=$( rawurlencode "${_PARAM[to]}" )
else
	ADMIN_EMAIL=$( rawurlencode "$(adpnparam admin-email)" )
fi
SUBJECT_TEXT=$( rawurlencode "${_PARAM[subject]}" )
if [[ -z "${SUBJECT_TEXT}" ]] ; then
	SUBJECT_TEXT=$( rawurlencode "ADPNet Ingest" )
fi
BODY_TEXT=$( rawurlencode "$( cat "${_ARGV[@]}" )" )

##########################################################################################
### SCRIPT: Look to see if Outlook.exe is available. #####################################
##########################################################################################

OUTLOOK=$( which OUTLOOK.EXE 2> /dev/null )
if [[ -z "${OUTLOOK}" ]] ; then
	CYGPATH=$( which cygpath 2> /dev/null )
	if [[ ! -z "${CYGPATH}" ]] ; then
		OUTLOOK="$(cygpath "${PROGRAMFILES}\Microsoft Office\root\Office16\OUTLOOK.EXE")"
		if [[ -z "${OUTLOOK}" || ! -x "${OUTLOOK}" ]] ; then
			OUTLOOK="$(cygpath "${PROGRAMFILES} (x86)\Microsoft Office\root\Office16\OUTLOOK.EXE")"
		fi
	fi
fi

##########################################################################################
### SCRIPT: If Outlook.exe is available, use it to spin up an e-mail. ####################
##########################################################################################

if [[ ! -z "${OUTLOOK}" && -x "${OUTLOOK}" ]] ; then
	"${OUTLOOK}" /c ipm.note /m "mailto:${ADMIN_EMAIL}&subject=${SUBJECT_TEXT}&body=${BODY_TEXT}"
fi
